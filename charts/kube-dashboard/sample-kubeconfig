# Get current cluster and context, and they can be any valid value
# export CURRENT_CONTEXT=$(kubectl config current-context)
# export CURRENT_CLUSTER=$(kubectl config view --raw -o=go-template='{{range .contexts}}{{if eq .name "'''${CURRENT_CONTEXT}'''"}}{{ index .context "cluster" }}{{end}}{{end}}')
# cluster.server=<host-of-kube-oidc-proxy>
#
# 1. Get token from the command below
# export USER_TOKEN_NAME=$(kubectl -n addon-system get serviceaccount kubernetes-dashboard -o=jsonpath='{.secrets[0].name}')
# export USER_TOKEN_VALUE=$(kubectl -n addon-system get secret/${USER_TOKEN_NAME} -o=go-template='{{.data.token}}' | base64 --decode)
# 2. get certificate-authority-data
# export CLUSTER_CA=$(kubectl get secret -n u4a-system oidc-proxy-cert-tls -o jsonpath='{.data.ca\.crt}')

apiVersion: v1
kind: Config
current-context: kubernetes-dashboard
contexts:
- name: kubernetes-dashboard
  context:
    cluster: cluster-ej2bz  # Update as needed
    user: kubernetes-dashboard-user
clusters:
- name: cluster-ej2bz # Update as needed
  cluster:
    # Must update the vales below
    certificate-authority-data: <certificate-authority-data>
    server: <cluster-server>
users:
- name: kubernetes-dashboard-user
  user:
    # Must update the vales below
    token: <user-token>

# kubectl create cm dashboard-kubeconfig --from-file=kubeconfig -n addon-system
